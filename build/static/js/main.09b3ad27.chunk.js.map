{"version":3,"sources":["components/posts.js","components/account.js","components/App.js","index.js"],"names":["Posts","_ref","posts","setPosts","user","token","_useState","useState","_useState2","Object","slicedToArray","search","setSearch","_useState3","_useState4","description","setDescription","_useState5","_useState6","title","setTitle","_useState7","_useState8","price","setPrice","_useState9","_useState10","willDeliver","setWillDeliver","_useState11","_useState12","_useState13","_useState14","useEffect","fetchPostsIfRegistered","fetchPosts","_ref2","asyncToGenerator","_regeneratorRuntime","mark","_callee","response","data","wrap","_context","prev","next","fetch","sent","json","console","log","stop","apply","this","arguments","_ref3","_callee2","_context2","method","headers","Content-Type","Authorization","concat","handleSubmitPost","_ref4","_callee3","e","newPosts","_context3","preventDefault","body","JSON","stringify","post","_x","handleSubmitComment","_ref5","_callee4","message","_context4","target","querySelector","value","_id","content","_x2","_x3","deletePost","_ref6","_callee5","_context5","stopPropagation","_x4","_x5","react_default","a","createElement","Fragment","id","onChange","type","name","placeholder","onSubmit","for","filter","toLowerCase","includes","searchPosts","map","key","author","onClick","Account","setUser","setToken","username","setUsername","password","setPassword","registering","setRegistering","loginUser","account_regeneratorRuntime","login","responseTwo","abrupt","registerUser","registration","handleSubmit","_yield$registerUser","_user","_token","_yield$loginUser","_user2","_token2","event","required","App","react_router_dom","exact","to","className","activeClassName","react_router","path","components_posts","account","ReactDOM","render","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.09b3ad27.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { fetchPosts } from \"../utility/api\";\n//import { apiCall, fetchPosts } from \"../utility/api\";\n\nconst Posts = ({posts, setPosts, user, token}) => {\n\n    const [search, setSearch] = useState('');\n    const [description, setDescription] = useState('');\n    const [title, setTitle] = useState('');\n    const [price, setPrice] = useState('');\n    const [willDeliver, setWillDeliver] = useState(false);\n    const [postId, setPostId] = useState('');\n    const [message, setMessage] = useState('');\n    \n    \n    useEffect(() => {   \n    \n    if(user && token) {\n        fetchPostsIfRegistered();\n    } else {\n        fetchPosts();\n    }\n    },[])\n\n    const fetchPosts = async () => {\n        const response = await fetch ('https://strangers-things.herokuapp.com/api/2204-FTB-MT-WEB-PT/posts');\n        const data = await response.json();\n        console.log('data: ', data)\n        setPosts(data.data.posts);\n        console.log(posts);\n    }\n\n    const fetchPostsIfRegistered = async () => {\n        const response = await fetch('https://strangers-things.herokuapp.com/api/2204-FTB-MT-WEB-PT/posts', {\n            method: \"GET\",\n            headers: {\n              'Content-Type': 'application/json',\n              'Authorization': `Bearer ${token}`\n            }\n        });\n        const data = await response.json();\n        console.log('data: ', data)\n        setPosts(data.data.posts);\n        console.log(posts, \"Check to see if this has messages\");\n    }\n    \n\n    const searchPosts = (posts) => {\n        return `${posts.title} ${posts.description}`\n        .toLowerCase()\n        .includes(search.toLowerCase());\n    }\n\n    const handleSubmitPost  = async (e) => {\n        e.preventDefault();\n        const response = await fetch('https://strangers-things.herokuapp.com/api/2204-FTB-MT-WEB-PT/posts', {\n            method: \"POST\",\n            headers: {\n              'Content-Type': 'application/json',\n              'Authorization': `Bearer ${token}`\n            },\n            body: JSON.stringify({\n              post: {\n                title: title,\n                description: description,\n                price: price,\n                willDeliver: willDeliver\n              }\n            })\n        });\n        const newPosts = await response.json();\n        console.log(newPosts);\n\n        fetchPostsIfRegistered();\n    } \n\n    const handleSubmitComment  = async (e, post) => {\n        console.log(e.target.querySelector(\"input\").value, \"THIS ONE\")\n        const message = e.target.querySelector(\"input\").value\n        console.log(post);\n        e.preventDefault();\n        const response = await fetch(`https://strangers-things.herokuapp.com/api/2204-FTB-MT-WEB-PT/posts/${post._id}/messages`, {\n            method: \"POST\",\n            headers: {\n              'Content-Type': 'application/json',\n              'Authorization': `Bearer ${token}`\n            },\n            body: JSON.stringify({\n                message: {\n                    content: message\n                  }\n              })\n        });\n        const newPosts = await response.json();\n        fetchPostsIfRegistered();\n        e.target.querySelector(\"input\").value = \"\";\n    }\n\n\n\n    const deletePost = async (e, post) => {\n        console.log(post)\n        e.stopPropagation();\n        const response = await fetch(`https://strangers-things.herokuapp.com/api/2204-FTB-MT-WEB-PT/posts/${post._id}`, {\n            method: \"DELETE\",\n            headers: {\n              'Content-Type': 'application/json',\n              'Authorization': `Bearer ${token}`\n            }\n          })\n        const data = await response.json();\n        console.log(data);\n        fetchPostsIfRegistered();\n    }\n\n    return <>\n        <h1 id = \"banner\"> POSTS </h1>\n\n        <h3> Search Posts</h3>\n        <input \n            onChange={(e) => setSearch(e.target.value)}\n            type=\"text\" name=\"search\" placeholder=\"search\"\n        />\n\n       \n    {user && token && <form onSubmit={handleSubmitPost}>\n        <h3> Create a New Post</h3>\n        <input \n          onChange={(e) => setTitle(e.target.value)}\n          type=\"text\" name=\"title\"\n          placeholder=\"title\" value={title} />\n        <input \n          onChange={(e) => setDescription(e.target.value)}\n          type=\"text\" name=\"description\"\n          placeholder=\"description\" value={description} />\n        <input \n          onChange={(e) => setPrice(e.target.value)}\n          type=\"text\" name=\"price\"\n          placeholder=\"price\" value={price} />\n         <input \n          onChange={(e) =>  {\n            console.log(e.target.value);\n                if (e.target.value === \"on\") {\n                    setWillDeliver(true); \n                } else {\n                setWillDeliver(false)\n                }\n            }   \n        }          \n        type=\"checkbox\" name=\"willDeliver\"\n        placeholder=\"will deliver\"  />\n        <label for=\"willDeliver\">Will Deliver?</label>\n        <button type=\"submit\">Submit Post</button>\n      </form>\n    }\n\n    <ul>\n        {\n        posts.filter(posts => {\n                return searchPosts(posts)\n        }).map(post => <div key = {post.id}>\n                <h3>{post.title}</h3>\n                <div>{post.description}</div>\n                <div>{post.price}</div>\n                <div>{post.willDeliver}</div>\n                {user && token && (user._id === post.author._id) && <button onClick={(e) => deletePost(e, post)}>Delete Post</button>}\n                {user && token && (user._id !== post.author._id) && <form onSubmit={(e) => handleSubmitComment(e, post)}>\n                {/* <input value={message} placeholder=\"content\" onChange={(ev) => setMessage(ev.target.value)}></input>        */}\n                <input placeholder=\"content\" ></input>\n                        <button type=\"submit\">Send Message</button>\n                        </form>\n                }\n            </div>\n         )}\n     </ul>\n    </>\n}\n\n\nexport default Posts;\n  \n","import React, { useState } from \"react\";\n\nconst Account = ({user, setUser, token, setToken}) => {\n\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [registering, setRegistering] = useState(false);\n\n\n    \n    const loginUser = async(username, password) => {\n        const login = await fetch('https://strangers-things.herokuapp.com/api/2204-FTB-MT-WEB-PT/users/login', {\n            method: \"POST\",\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              user: {\n                username: username,\n                password: password\n              }\n            })\n          })\n\n        const response = await login.json();\n        console.log(response)\n\n        const user = await fetch('https://strangers-things.herokuapp.com/api/2204-FTB-MT-WEB-PT/users/me', {\n            method: \"GET\",\n            headers: {\n              'Content-Type': 'application/json',\n              'Authorization': `Bearer ${response.data.token}`\n            }\n        })\n\n        const responseTwo = await user.json();\n        console.log(responseTwo)\n        return {\n            user: responseTwo.data,\n            token: response.data.token\n        }  \n    }\n      \n\n    const registerUser = async(username, password) => {\n        const registration = await fetch('https://strangers-things.herokuapp.com/api/2204-FTB-MT-WEB-PT/users/register', {\n            method: \"POST\",\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              user: {\n                username: username,\n                password: password\n              }\n            })\n          })\n        const response = await registration.json();\n        console.log(response)\n\n        const user = await fetch('https://strangers-things.herokuapp.com/api/2204-FTB-MT-WEB-PT/users/me', {\n            method: \"GET\",\n            headers: {\n              'Content-Type': 'application/json',\n              'Authorization': `Bearer ${response.data.token}`\n            }\n        })\n\n        const responseTwo = await user.json();\n        console.log(responseTwo)\n        return {\n            user: responseTwo.data,\n            token: response.data.token\n        }\n    }\n\n    \n    const handleSubmit = async (e) => {\n        e.preventDefault();\n    \n        if (registering) {\n          const {user, token} = await registerUser(username, password)\n          setUser(user);\n          setToken(token);\n        } else {\n          const {user, token} = await loginUser(username, password)\n          setToken(token);\n          setUser(user);\n        }\n    }\n    \n    const handleLogout = () => {\n        setUser(false);\n        setToken('');\n    }\n    \n    const toggleRegistration = () => {\n        setRegistering(!registering);\n    }\n    \n    return <>\n      {\n        (user && token) ?\n        <>\n          <h1>User Profile</h1>\n          <p>Hi {user.username} is logged in</p>\n          <button onClick={handleLogout}>Logout</button>\n        </> :\n        <>\n          <h1>{registering ? \"Registration\" : \"Login\"}</h1>\n          <form onSubmit={handleSubmit}>\n            <input\n              onChange={(event) => setUsername(event.target.value) }\n              required\n              name=\"username\"\n              type=\"text\"\n              placeholder=\"username\"\n              value={username}\n            ></input>\n            <input\n              onChange={(event) => setPassword(event.target.value) }\n              required\n              name=\"password\"\n              type=\"password\"\n              placeholder=\"password\"\n              value={password}\n            ></input>\n            <button type=\"submit\">Submit</button>\n          </form>\n            <button onClick={toggleRegistration} >Register/Login toggle</button>\n        </>\n    }\n      </>\n}  \n\nexport default Account;\n\n\n\n","import React, { useState } from \"react\";\nimport { NavLink, Route } from \"react-router-dom\";\nimport Posts from './posts';\nimport Account from \"./account\";\n\n\n\n\n\n\nconst App = () => {\n\n    const [posts, setPosts] = useState([])\n    const [token, setToken] = useState('')\n    const [user, setUser] = useState(false);\n\n  return <main> \n    <nav>\n      <NavLink exact to=\"/\" className=\"navlink\" activeClassName=\"active\">\n        Home\n      </NavLink>\n\n      <NavLink to=\"/posts\" className=\"navlink\" activeClassName=\"active\">\n        posts\n      </NavLink>\n\n      <NavLink to=\"/account\" className=\"navlink\" activeClassName=\"active\">\n        Account\n      </NavLink>\n    </nav>\n   \n    <Route exact path=\"/\">\n      <div></div>\n    </Route>\n\n    <Route path=\"/posts\">\n         <Posts posts={posts} setPosts={setPosts} user={user} token={token} />\n    </Route>\n\n    <Route path=\"/account\">\n      <Account \n        user={user} setUser={setUser} \n        token={token} setToken={setToken}\n      />\n    </Route>\n\n\n  </main>\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./style.css\"\nimport { App } from './components';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('app')\n)"],"sourceRoot":""}